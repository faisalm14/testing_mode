<?php  

define("SETTINGS_FILE", DRUPAL_ROOT."/sites/default/settings.php");
define("SETTINGS_BACKUP_FILE", DRUPAL_ROOT."/sites/default/settings.testing_mode.bak");

function testing_mode_menu() { 
	
	return array (
		'admin/config/development/testing_mode' => array(
			'title' => t('Testing Mode'),
			'description' => t('Enables Testing Mode by switching the database in the settings.php. Hackish though.'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array('testing_mode_admin_form'),
			'access arguments' =>  array('administer users'),
			'type' => MENU_NORMAL_ITEM,
		),
	);
}


function testing_mode_admin_form() { 
	
	$form = array(); 
	
	$form['tm_new_database'] = array(
		'#title' => t("New Database"),
		'#description' => t("New database hostname for testing mode."),
		'#type'=> 'textfield',
		'#default_value' => variable_get('tm_new_database'),
	);

	$form['submit'] = array(
		'#type'=> 'submit',
		'#value' => variable_get('tm_testing_mode') ? t("Stop Testing Mode") : ("Start Testing Mode"),
	);
	
	$form['#validate'][] = 'testing_mode_admin_form_validate';
	$form['#submit'][] = 'testing_mode_admin_form_submit'; 
	return $form;
	 
}

/**
 * Validate callback for the form 
 */
function testing_mode_admin_form_validate(&$form, &$form_state) { 
	$current_database = 'miconnect';
	if ($form_state['input']['tm_new_database'] == $current_database) { 
		form_set_error('tm_new_database', t("Test database could not same as the current database."));  
	}
}

/**
 * Submit Handler
 * @param unknown_type $form
 * @param unknown_type $form_state
 */
function testing_mode_admin_form_submit(&$form, &$form_state) { 
	
	//if testing mode started
	if (!variable_get('tm_testing_mode', FALSE)) { 
			
		set_time_limit(60);
		
		$current_database = tm_get_org_database();
		$new_database = $form_state['input']['tm_new_database'];
		
		
		testing_mode_copy_database($current_database, $new_database);
		
		tm_copy_file(SETTINGS_FILE, SETTINGS_BACKUP_FILE); 
		
		//append new database in settings.php
		tm_append_file_text($new_database);
		
				
		drupal_set_message(t("Testing mode started.")); 
	} else { //it testing mode is stopped
		//just copy the files , don't do anything with the database. 
		if (tm_copy_file(SETTINGS_BACKUP_FILE, SETTINGS_FILE)) {  
			tm_delete_file(SETTINGS_BACKUP_FILE); 
			
			drupal_set_message(t("Testing mode successfully stopped."));
		} 
	}
	
	//clear the cache
	cache_clear_all();
	
}


function testing_mode_database_backup($database) { 
	
	
	//db_query("DROP DATABASE IF EXISTS $previous_back_up");
	
	//new database name 
	$backup_database = $database."_BACK_UP_".date('y\y\rm\m\t\hd\d\y_H\h\ri\m\i\ns\s\e\c');
	
	//first create database
	db_query("CREATE DATABASE $backup_database");
	exec("mysqldump -h localhost -u root $database | mysql -h localhost -u root  $backup_database 2>&1");
	
}

/**
 * Returns the originial default database
 */
function tm_get_org_database() { 
	
	global $databases; 
	return $databases['default']['default']; 		
}
/**
 * 
 */
function testing_mode_copy_database($old_database, $new_database) {
	
	//set variables before database is copied over. 
	variable_set('tm_new_database', $new_database);
	variable_set('tm_testing_mode', true);
	
	
	//create database backup if database already exists only if its the first time and its newer than previous one
	//as we can enter some other database by mistake.
	//and also doing back up for all the time is painful
	$database_exists = true;  
	if ((!variable_get('tm_new_database') && $database_exists)  || !variable_get('tm_new_database') != $new_database ) { 
		testing_mode_database_backup($new_database);
		 
	}
	
	//drop database  as we already have a backup
	db_query("DROP DATABASE IF EXISTS $new_database");
	
	//create database if does not exists
	db_query("CREATE DATABASE $new_database");

	//now copy the data
	exec("mysqldump -h localhost -u root $old_database | mysql -h localhost -u root  $new_database 2>&1");
}

/**
 * Implemenents hook_boot()
 */
function testing_mode_boot() {
	if (file_exists(SETTINGS_BACKUP_FILE)) {
		//drupal_set_message(t("Please replace '". SETTINGS_FILE ."' content with '". SETTINGS_BACKUP_FILE ."' content."), 'error');
	}
}

/**
 * @param unknown_type $old_text
 * @param unknown_type $new_text
 */
function tm_append_file_text($database) {
	
	chmod(SETTINGS_FILE, 755);
	$file = SETTINGS_FILE;
	$fh = fopen($file, 'a') or die("can't open file");
	
	$new_string =  '$databases["default"]["default"] = array(
	 "database" => "'.$database.'",
   "username" => "root",
   "password" => "",
   "host" => "localhost",
   "port" => "3306",
   "driver" => "mysql",
   "prefix" => "",
	);'; 
	fwrite($fh, $new_string);
	fclose($fh);
}


/**
 * Helper function
 * @param unknown_type $file_path
 */
function tm_copy_file($file, $backup_file) {
	chmod(SETTINGS_FILE, 755);
	return copy($file, $backup_file);
}

/**
 * Helper function
 * @param $file
 * @return boolean
 */
function tm_delete_file($backup_file) {
	if (file_exists( $backup_file )) {
		unlink( $backup_file );
		variable_set('tm_testing_mode', FALSE);
		return TRUE;
	}
	return FALSE;
}